# Create user
mutation {
  createUser(
    name:"John Doe"
    email:"john.doe@example.com"
    password: "secret"
  ) {
    id
    name
    email
  }
}

# get first 10 tasks
{
  tasks(first:10) {
    paginatorInfo {
      total
      hasMorePages
    }
    data {
      id
      name
      user {
        name
        email
      }
    }
  }
}

# Get specific user by id
{
  user(id:12) {
    name
    email
    tasks {
      id
      name
      status
    }
  }
}

# Get first 10 users
{
  users(first:10) {
    paginatorInfo {
      total
      hasMorePages
    }
    data {
      id
      name
      email
    }
  }
}

# Get logged in user with tasks
{
  me {
    email
    tasks {
      id
      name
      status
    }
  }
}

# Login user
mutation {
  login(email:"graphql@test.com", password:"secret")
}

# Create task
mutation {
  createTask(
    name:"Learn NuxtJS") {
    id
    user {
      id
      email
    }
  }
}

# Update Task
mutation {
  updateTask(
    id: "57",
    name: "Learn Vue JS",
    status: "{\"todo\":false,\"done\":true}"
    ) {
    id
    name
    status
    user {
      id
      email
    }
  }
}

# Delete task by id
mutation {
  deleteTask(id: "57") {
    id
    name
    status
    user {
      id
      email
    }
  }
}

#Create Task
createTask(name: String!): Task 
    @field(resolver: "TaskMutator@create")

# Note: You need to login first for you to try all queries.
# Save the response token when login is succesful and use it to other queries or authorization as headers
{
  Authorization: "Bearer <token>"
}
